Q2. Explain dynamic polymorphism ?

Ans:-

Dynamic Polymorphism -

Dynamic polymorphism is a process or mechanism in which a call to an overridden method is to resolve at runtime .
It is also known as runtime polymorphism or dynamic method dispatch.
We can achieve dynamic polymorphism by using the method overriding.

In this process, an overridden method is called through a reference variable of a parentClass.
The determination of the method to be called is based on the object being referred to by the reference variable.


Method overriding -

1.We implement the method overriding using Inheritance.
 If a childClass provides the specific implementation of the method that has been declared by one of its parent class,
 it is known as method overriding.

 2.It happens between different classes
 4. Main method can not  be overriding.
 5. It decides which method is to execute at runtime.
 6.It can be achieved through dynamic binding.
 It is required where a subclass object is assigned to a super-class object for dynamic polymorphism.

Ex-
class Vehicles{
  void run(){
  System.out.println("Vehicle is running fastly");}
}

class Bike extends Vehicles{

void run(){
System.out.println("Bike is running safely");
}

  public static void main(String args[]){

  Bike b = new Bike();
  b.run();
  }
}